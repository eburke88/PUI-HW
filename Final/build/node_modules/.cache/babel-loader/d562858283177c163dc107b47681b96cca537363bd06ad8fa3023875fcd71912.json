{"ast":null,"code":"var _jsxFileName = \"C:\\\\PUI-FP\\\\react-website\\\\src\\\\Project-Components\\\\ImageModal.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Modal = _ref => {\n  _s();\n  let {\n    setShowModal\n  } = _ref;\n  const modalRef = useRef();\n  const closeModal = e => {\n    if (e.target === modalRef.current) {\n      setShowModal(false);\n    }\n  };\n  //render the modal JSX in the portal div.\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: modalRef,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This is a Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), document.getElementById(\"portal\"));\n};\n_s(Modal, \"zNVem5B1U/BPM1VF05fbpVyTiCs=\");\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useRef","ReactDom","jsxDEV","_jsxDEV","Modal","_ref","_s","setShowModal","modalRef","closeModal","e","target","current","createPortal","className","ref","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","_c","$RefreshReg$"],"sources":["C:/PUI-FP/react-website/src/Project-Components/ImageModal.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nexport const Modal = ({ setShowModal }) => {\r\n  const modalRef = useRef();\r\n  const closeModal = (e) => {\r\n    if (e.target === modalRef.current) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n  //render the modal JSX in the portal div.\r\n  return ReactDom.createPortal(\r\n    <div className=\"container\" ref={modalRef} onClick={closeModal}>\r\n      <div className=\"modal\">\r\n        <h2>This is a Modal</h2>\r\n        <button onClick={() => setShowModal(false)}>X</button>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,MAAMC,KAAK,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACpC,MAAMG,QAAQ,GAAGR,MAAM,EAAE;EACzB,MAAMS,UAAU,GAAIC,CAAC,IAAK;IACxB,IAAIA,CAAC,CAACC,MAAM,KAAKH,QAAQ,CAACI,OAAO,EAAE;MACjCL,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EACD;EACA,oBAAON,QAAQ,CAACY,YAAY,eAC1BV,OAAA;IAAKW,SAAS,EAAC,WAAW;IAACC,GAAG,EAAEP,QAAS;IAACQ,OAAO,EAAEP,UAAW;IAAAQ,QAAA,eAC5Dd,OAAA;MAAKW,SAAS,EAAC,OAAO;MAAAG,QAAA,gBACpBd,OAAA;QAAAc,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxBlB,OAAA;QAAQa,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAAC,KAAK,CAAE;QAAAU,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF,EACNC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAClC;AACH,CAAC;AAACjB,EAAA,CAjBWF,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}