{"ast":null,"code":"var _jsxFileName = \"C:\\\\PUI-FP\\\\react-website\\\\src\\\\ProfilePage\\\\ProjectEntry.js\",\n  _s = $RefreshSig$();\nimport '../css/Profile.css';\nimport '../css/style.css';\nimport '../css/Project.css';\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectEntry(props) {\n  _s();\n  /* */\n\n  let link;\n  if (props.name === \"ReXplore\") {\n    /* creating path for custom page */\n    link = `ReXplore`;\n  } else {\n    link = `/Project?name=${props.name}`;\n  }\n  const [hover, setHover] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const toggleClass = () => {\n    setActive(!isActive);\n  };\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: link,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"section-entry\",\n      onMouseEnter: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"entry-image\",\n        src: \"./content/\" + props.headerSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `play-entry-button ${hover ? \"Show\" : \"\"}`,\n        src: \"./content/Images-Profile/playbutton.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entry-title\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entry-desc\",\n        children: props.tagline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectEntry, \"fqrYD4FVg9PAx3fXIioWODwAgj4=\");\n_c = ProjectEntry;\n;\nvar _c;\n$RefreshReg$(_c, \"ProjectEntry\");","map":{"version":3,"names":["Link","React","useState","jsxDEV","_jsxDEV","ProjectEntry","props","_s","link","name","hover","setHover","isActive","setActive","toggleClass","to","children","className","onMouseEnter","onMouseLeave","src","headerSrc","fileName","_jsxFileName","lineNumber","columnNumber","tagline","_c","$RefreshReg$"],"sources":["C:/PUI-FP/react-website/src/ProfilePage/ProjectEntry.js"],"sourcesContent":["import '../css/Profile.css';\r\nimport '../css/style.css';\r\nimport '../css/Project.css';\r\n\r\nimport {Link}\r\nfrom \"react-router-dom\";\r\n\r\nimport React,{useState} from 'react';\r\n\r\nexport default function ProjectEntry(props) { /* */\r\n\r\n    let link;\r\n    if (props.name === \"ReXplore\") { /* creating path for custom page */\r\n        link=`ReXplore`\r\n    } else {\r\n        link=`/Project?name=${props.name}`\r\n    }\r\n\r\n    const [hover, setHover]=useState(false)\r\n\r\n    const [isActive, setActive]=useState(false);\r\n\r\n    const toggleClass=() => {\r\n      setActive(!isActive);\r\n    };\r\n\r\n    return (\r\n        <Link to={link}>\r\n            <button className=\"section-entry\"   onMouseEnter={()=> setHover(true)} onMouseLeave={()=> setHover(false)}>\r\n                <img className=\"entry-image\" src={\"./content/\" + props.headerSrc} /> {/* dynamically render image based on project */}\r\n                <img className={`play-entry-button ${hover ? \"Show\" : \"\"}`} src=\"./content/Images-Profile/playbutton.png\"/>\r\n                <div className=\"entry-title\">{props.name}</div>\r\n                <div className=\"entry-desc\">{props.tagline}</div> \r\n            </button>\r\n           \r\n        </Link>\r\n\r\n    );\r\n\r\n};\r\n\r\n"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,OAAO,kBAAkB;AACzB,OAAO,oBAAoB;AAE3B,SAAQA,IAAI,QACP,kBAAkB;AAEvB,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAAE;;EAE1C,IAAIC,IAAI;EACR,IAAIF,KAAK,CAACG,IAAI,KAAK,UAAU,EAAE;IAAE;IAC7BD,IAAI,GAAE,UAAS;EACnB,CAAC,MAAM;IACHA,IAAI,GAAE,iBAAgBF,KAAK,CAACG,IAAK,EAAC;EACtC;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAM,CAACU,QAAQ,EAAEC,SAAS,CAAC,GAACX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,WAAW,GAACA,CAAA,KAAM;IACtBD,SAAS,CAAC,CAACD,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIR,OAAA,CAACJ,IAAI;IAACe,EAAE,EAAEP,IAAK;IAAAQ,QAAA,eACXZ,OAAA;MAAQa,SAAS,EAAC,eAAe;MAAGC,YAAY,EAAEA,CAAA,KAAKP,QAAQ,CAAC,IAAI,CAAE;MAACQ,YAAY,EAAEA,CAAA,KAAKR,QAAQ,CAAC,KAAK,CAAE;MAAAK,QAAA,gBACtGZ,OAAA;QAAKa,SAAS,EAAC,aAAa;QAACG,GAAG,EAAE,YAAY,GAAGd,KAAK,CAACe;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,KAAC,eACrErB,OAAA;QAAKa,SAAS,EAAG,qBAAoBP,KAAK,GAAG,MAAM,GAAG,EAAG,EAAE;QAACU,GAAG,EAAC;MAAyC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC3GrB,OAAA;QAAKa,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEV,KAAK,CAACG;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC/CrB,OAAA;QAAKa,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAEV,KAAK,CAACoB;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC5C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEN;AAIf;AAAClB,EAAA,CA9BuBF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA8BnC;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}